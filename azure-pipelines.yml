# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Bash@3
    displayName: 'Install sbt'
    inputs:
      targetType: 'inline'
      script: 'echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list && sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823 && sudo apt-get update && sudo apt-get install sbt'

  - task: Bash@3
    displayName: 'Assembly application'
    inputs:
      targetType: 'inline'
      script: 'sbt assembly'

  - task: Bash@3
    displayName: 'Install sonar scanner'
    inputs:
      targetType: 'inline'
      script: 'local SONAR_SCANNER_VERSION=3.3.0.1492
               export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION
               rm -rf $SONAR_SCANNER_HOME
               mkdir -p $SONAR_SCANNER_HOME
               curl -sSLo $HOME/.sonar/sonar-scanner.zip http://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/$SONAR_SCANNER_VERSION/sonar-scanner-cli-$SONAR_SCANNER_VERSION.zip
               unzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
               rm $HOME/.sonar/sonar-scanner.zip
               export PATH=$SONAR_SCANNER_HOME/bin:$PATH
               export SONAR_SCANNER_OPTS="-server"'

  - task: Bash@3
    displayName: 'Run sonar scanner'
    inputs:
      targetType: 'inline'
      script: 'mvn sonar:sonar -Dsonar.projectKey=Schrotty_ScalaIRC  -Dsonar.organization=schrotty-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$(sonar.login)'

